version: "3"

x-defaults: &defaults
  restart: unless-stopped
  environment:
    - DRY_RUN
  healthcheck:
    interval: 30s
    timeout: 30s
    start_period: 30s

services:
  cli:
    build:
      context: ./cli
    image: ${DOCKER_IMAGE_USER:-evgeniy-khyst}/letsencrypt-docker-compose-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir

  common-configs:
    build:
      context: ./common-configs
    image: common-configs
    deploy:
      replicas: 0

  nginx:
    <<: *defaults
    build:
      context: ./nginx
    image: ${DOCKER_IMAGE_USER:-evgeniy-khyst}/nginx
    user: "${CURRENT_USER}:${DOCKER_GROUP}"
    volumes:
      - ./config.json:/configs/config.json:ro
      - ./reload_trigger:/reload_trigger
      - ./nginx-conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-conf/conf.d:/etc/nginx/conf.d:ro
      - ./html:/var/www/html:ro
      - ./nginx_conf_ssl:/etc/nginx/ssl
      - ./letsencrypt_certs:/etc/letsencrypt
      - ./certbot_acme_challenge:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "nc", "-z", "nginx", "80"]
      retries: 10

  certbot:
    <<: *defaults
    build:
      context: ./certbot
    image: ${DOCKER_IMAGE_USER:-evgeniy-khyst}/certbot
    volumes:
      - ./config.json:/configs/config.json:ro
      - ./letsencrypt_certs:/etc/letsencrypt
      - ./certbot_acme_challenge:/var/www/certbot
      - ./reload_trigger:/reload_trigger
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'test -n "$$(ls -A /etc/letsencrypt/live/)" || test "$$DRY_RUN" == "true" || exit 1',
        ]
      retries: 5
    depends_on:
      nginx:
        condition: service_healthy

  php-fpm:
    image: php:8.1.22-fpm-alpine
    volumes:
      - ./html:/var/www/html:ro

  example-backend:
    <<: *defaults
    build:
      context: ./examples/nodejs-backend
    image: ${DOCKER_IMAGE_USER:-evgeniy-khyst}/expressjs-helloworld

volumes:
  nginx_conf_ssl:
  letsencrypt_certs:
  certbot_acme_challenge:
  reload_trigger:

profiles:
  config:
    services:
      - cli

  production:
    services:
      - nginx
      - certbot
      - php-fpm
      - example-backend
